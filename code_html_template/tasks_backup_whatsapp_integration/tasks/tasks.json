{
  "meta": {
    "projectName": "nextjs-template",
    "version": "1.5.0",
    "source": ".task-master/PRD.txt",
    "description": "Tasks generated from PRD",
    "totalTasksGenerated": 22,
    "tasksIncluded": 22
  },
  "tasks": [
    {
      "id": 1,
      "title": "Update database schema with Twilio credential fields",
      "description": "Alter the tenant_settings table to add new fields for Twilio credentials and configuration",
      "status": "pending",
      "dependencies": [],
      "priority": "high",
      "details": "Execute SQL to add the following columns to tenant_settings table:\n- twilio_account_sid (VARCHAR 255)\n- twilio_auth_token (VARCHAR 500, encrypted)\n- twilio_whatsapp_from (VARCHAR 50)\n- whatsapp_webhook_url (VARCHAR 500)\n- whatsapp_webhook_token (VARCHAR 255, encrypted)\n\nAdd appropriate comments to each column explaining their purpose.",
      "testStrategy": "Verify that all columns are added with correct data types and constraints. Check that comments are properly applied."
    },
    {
      "id": 2,
      "title": "Update TenantSettingsDTO schema",
      "description": "Extend the TenantSettingsDTO to include new Twilio WhatsApp fields",
      "status": "pending",
      "dependencies": [
        1
      ],
      "priority": "high",
      "details": "Add the following fields to TenantSettingsDTO:\n- twilioAccountSid (string, max 255)\n- twilioAuthToken (string, max 500)\n- twilioWhatsappFrom (string, max 50)\n- whatsappWebhookUrl (string, max 500)\n- whatsappWebhookToken (string, max 255)\n\nEnsure validation constraints match database schema.",
      "testStrategy": "Validate that the DTO can serialize and deserialize with the new fields correctly."
    },
    {
      "id": 3,
      "title": "Implement TwilioWhatsAppService",
      "description": "Create a service layer to handle Twilio WhatsApp API interactions",
      "status": "pending",
      "dependencies": [
        2
      ],
      "priority": "high",
      "details": "Implement TwilioWhatsAppService with the following methods:\n- sendMessage(tenantId, request)\n- sendBulkMessages(tenantId, request)\n- checkDeliveryStatus(tenantId, messageId)\n- getApprovedTemplates(tenantId)\n- createTemplate(tenantId, request)\n- handleWebhook(tenantId, payload)\n- getTenantCredentials(tenantId) (private)\n- encryptAndStoreCredentials(tenantId, credentials) (private)\n- logMessage(logEntry) (private)",
      "testStrategy": "Unit test each method with mock Twilio responses. Test credential retrieval and encryption functionality."
    },
    {
      "id": 4,
      "title": "Create WhatsApp message endpoints",
      "description": "Implement REST endpoints for sending WhatsApp messages",
      "status": "pending",
      "dependencies": [
        3
      ],
      "priority": "high",
      "details": "Create REST controllers for the following endpoints:\n- POST /api/whatsapp/send-message\n- POST /api/whatsapp/send-bulk\n- GET /api/whatsapp/delivery-status/{messageId}\n\nEnsure proper request validation, error handling, and tenant isolation.",
      "testStrategy": "Test each endpoint with valid and invalid requests. Verify tenant isolation works correctly."
    },
    {
      "id": 5,
      "title": "Implement message template management endpoints",
      "description": "Create API endpoints for WhatsApp message templates",
      "status": "pending",
      "dependencies": [
        3
      ],
      "priority": "medium",
      "details": "Implement REST endpoints for template management:\n- GET /api/whatsapp/templates\n- POST /api/whatsapp/templates\n\nEnsure templates are stored with proper validation and tenant isolation.",
      "testStrategy": "Test template creation and retrieval. Verify templates are properly associated with tenants."
    },
    {
      "id": 6,
      "title": "Implement WhatsApp webhook handler",
      "description": "Create webhook endpoint for receiving Twilio delivery receipts",
      "status": "pending",
      "dependencies": [
        3
      ],
      "priority": "high",
      "details": "Implement webhook handler at POST /api/whatsapp/webhook that:\n- Verifies Twilio webhook signatures\n- Processes delivery status updates\n- Updates whatsapp_log table\n- Triggers any follow-up actions\n\nImplement security measures like rate limiting and logging.",
      "testStrategy": "Test webhook with sample Twilio payloads. Verify signature validation works and status updates are processed correctly."
    },
    {
      "id": 7,
      "title": "Implement encryption for sensitive credentials",
      "description": "Create utility for encrypting and decrypting sensitive WhatsApp credentials",
      "status": "pending",
      "dependencies": [
        1
      ],
      "priority": "high",
      "details": "Implement encryption utilities for:\n- Twilio auth tokens\n- Webhook tokens\n\nUse AES-256 encryption with tenant-specific keys. Implement secure key storage and retrieval.",
      "testStrategy": "Test encryption and decryption with various inputs. Verify encrypted values can be decrypted correctly."
    },
    {
      "id": 8,
      "title": "Add environment variables for Twilio configuration",
      "description": "Set up environment variables for Twilio defaults and encryption keys",
      "status": "pending",
      "dependencies": [],
      "priority": "medium",
      "details": "Add the following environment variables:\n- TWILIO_ACCOUNT_SID\n- TWILIO_AUTH_TOKEN\n- TWILIO_WHATSAPP_FROM\n- TWILIO_ENCRYPTION_KEY\n- WEBHOOK_ENCRYPTION_KEY\n- WHATSAPP_WEBHOOK_BASE_URL\n\nUpdate configuration loaders to use these variables.",
      "testStrategy": "Verify environment variables are correctly loaded and used as defaults when tenant-specific values are not provided."
    },
    {
      "id": 9,
      "title": "Create WhatsApp type definitions",
      "description": "Define TypeScript interfaces for WhatsApp integration",
      "status": "pending",
      "dependencies": [],
      "priority": "medium",
      "details": "Add the following interfaces to types/index.ts:\n- TwilioCredentials\n- WhatsAppMessageRequest\n- BulkWhatsAppRequest\n- MessageTemplate\n- WhatsAppAnalytics\n\nEnsure types match backend data structures.",
      "testStrategy": "Verify type definitions are comprehensive and correctly represent the data structures used in the application."
    },
    {
      "id": 10,
      "title": "Create WhatsApp settings page components",
      "description": "Implement React components for WhatsApp settings management",
      "status": "pending",
      "dependencies": [
        9
      ],
      "priority": "medium",
      "details": "Create the following components:\n- WhatsAppSettingsForm.tsx\n- TwilioCredentialsSection.tsx\n- WebhookConfiguration.tsx\n- TestConnection.tsx\n- MessageTemplatesManager.tsx\n\nPlace them in the admin/whatsapp-settings directory.",
      "testStrategy": "Test components with various input scenarios. Verify form validation works correctly."
    },
    {
      "id": 11,
      "title": "Enhance tenant settings form with WhatsApp section",
      "description": "Update existing tenant settings form to include expanded WhatsApp configuration",
      "status": "pending",
      "dependencies": [
        10
      ],
      "priority": "medium",
      "details": "Expand the WhatsApp section in TenantSettingsForm.tsx to include:\n- Toggle for enabling WhatsApp\n- Twilio credentials section\n- Webhook configuration\n- Test connection button\n\nEnsure conditional rendering based on enableWhatsappIntegration flag.",
      "testStrategy": "Test form with different combinations of settings. Verify conditional rendering works correctly."
    },
    {
      "id": 12,
      "title": "Create bulk messaging interface components",
      "description": "Implement components for sending bulk WhatsApp messages",
      "status": "pending",
      "dependencies": [
        9
      ],
      "priority": "medium",
      "details": "Create the following components in admin/whatsapp/bulk-messaging:\n- BulkMessageComposer.tsx\n- RecipientSelector.tsx\n- MessagePreview.tsx\n- SendingProgress.tsx\n- DeliveryReport.tsx\n\nEnsure components work together for a complete bulk messaging workflow.",
      "testStrategy": "Test the complete bulk messaging workflow with various recipient counts and message types."
    },
    {
      "id": 13,
      "title": "Create WhatsApp dashboard components",
      "description": "Implement analytics and reporting components for WhatsApp",
      "status": "pending",
      "dependencies": [
        9
      ],
      "priority": "low",
      "details": "Create the following components in admin/whatsapp/dashboard:\n- WhatsAppAnalytics.tsx\n- MessageHistory.tsx\n- DeliveryStatusGrid.tsx\n- TemplateLibrary.tsx\n\nImplement data fetching and visualization for WhatsApp metrics.",
      "testStrategy": "Test dashboard with sample data. Verify metrics are calculated and displayed correctly."
    },
    {
      "id": 14,
      "title": "Create proxy API routes for WhatsApp logs",
      "description": "Implement Next.js API routes to proxy WhatsApp log requests",
      "status": "pending",
      "dependencies": [],
      "priority": "medium",
      "details": "Create the following proxy routes:\n- src/pages/api/proxy/whats-app-logs/index.ts\n- src/pages/api/proxy/whats-app-logs/[...slug].ts\n\nUse the createProxyHandler utility to forward requests to backend API.",
      "testStrategy": "Test proxy routes with various requests. Verify requests are correctly forwarded to backend API."
    },
    {
      "id": 15,
      "title": "Create proxy API route for WhatsApp messages",
      "description": "Implement Next.js API route to proxy WhatsApp message requests",
      "status": "pending",
      "dependencies": [],
      "priority": "medium",
      "details": "Create proxy route at src/pages/api/proxy/whatsapp-messages/index.ts using createProxyHandler to forward requests to backend API.",
      "testStrategy": "Test proxy route with various message requests. Verify requests are correctly forwarded to backend API."
    },
    {
      "id": 16,
      "title": "Implement WhatsApp settings server actions",
      "description": "Create server actions for WhatsApp settings management",
      "status": "pending",
      "dependencies": [
        10,
        14,
        15
      ],
      "priority": "medium",
      "details": "Create src/app/admin/whatsapp-settings/ApiServerActions.ts with:\n- updateWhatsAppSettingsServer function\n- testWhatsAppConnectionServer function\n\nEnsure proper error handling and tenant ID inclusion.",
      "testStrategy": "Test server actions with valid and invalid inputs. Verify tenant ID is correctly included in requests."
    },
    {
      "id": 17,
      "title": "Implement WhatsApp messaging server actions",
      "description": "Create server actions for sending WhatsApp messages",
      "status": "pending",
      "dependencies": [
        12,
        14,
        15
      ],
      "priority": "medium",
      "details": "Create src/app/admin/whatsapp/bulk-messaging/ApiServerActions.ts with:\n- sendWhatsAppMessageServer function\n- sendBulkWhatsAppMessagesServer function\n\nEnsure proper error handling and tenant ID inclusion.",
      "testStrategy": "Test server actions with various message types and recipient counts. Verify error handling works correctly."
    },
    {
      "id": 18,
      "title": "Implement connection testing functionality",
      "description": "Create utility to test Twilio WhatsApp connection",
      "status": "pending",
      "dependencies": [
        3,
        16
      ],
      "priority": "low",
      "details": "Implement test connection functionality that:\n- Validates Twilio credentials\n- Sends a test message to a specified number\n- Verifies webhook configuration\n- Returns detailed connection status\n\nConnect this to the TestConnection component.",
      "testStrategy": "Test connection utility with valid and invalid credentials. Verify detailed error reporting works correctly."
    },
    {
      "id": 19,
      "title": "Create WhatsApp message templates UI",
      "description": "Implement interface for managing WhatsApp message templates",
      "status": "pending",
      "dependencies": [
        5,
        10
      ],
      "priority": "low",
      "details": "Enhance MessageTemplatesManager.tsx to:\n- List existing templates\n- Create new templates\n- Preview templates with sample data\n- Show template approval status\n\nConnect to template management API endpoints.",
      "testStrategy": "Test template creation and management workflow. Verify templates can be previewed correctly."
    },
    {
      "id": 20,
      "title": "Implement WhatsApp analytics data fetching",
      "description": "Create service for fetching and processing WhatsApp analytics data",
      "status": "pending",
      "dependencies": [
        13
      ],
      "priority": "low",
      "details": "Implement data fetching for WhatsApp analytics:\n- Message counts by status\n- Delivery and read rates\n- Time-based metrics\n- Template performance\n\nConnect this to the WhatsAppAnalytics component.",
      "testStrategy": "Test analytics service with sample data. Verify metrics are calculated correctly."
    },
    {
      "id": 21,
      "title": "Create comprehensive testing suite",
      "description": "Implement tests for WhatsApp integration components",
      "status": "pending",
      "dependencies": [
        3,
        4,
        5,
        6,
        10,
        12,
        13
      ],
      "priority": "low",
      "details": "Create tests for:\n- Twilio service layer\n- API endpoints\n- Webhook handling\n- UI components\n- Server actions\n\nImplement integration tests for complete workflows.",
      "testStrategy": "Run tests with various scenarios. Verify all components work correctly together."
    },
    {
      "id": 22,
      "title": "Create documentation for WhatsApp integration",
      "description": "Document WhatsApp integration features and usage",
      "status": "pending",
      "dependencies": [
        21
      ],
      "priority": "low",
      "details": "Create documentation for:\n- Setting up Twilio account\n- Configuring WhatsApp integration\n- Creating and using templates\n- Sending bulk messages\n- Understanding analytics\n\nInclude screenshots and examples.",
      "testStrategy": "Review documentation for completeness and accuracy. Verify examples work as described."
    }
  ]
}